{"version":3,"sources":["componets/Header.jsx","componets/Movie.jsx","componets/Movies.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","useState","textSearch","setTextSearch","class","id","to","className","type","placeholder","aria-label","onChange","event","target","value","onClick","console","log","length","push","text","Movie","movie","src","poster_path","alt","title","data-toggle","data-target","format","release_date","aria-hidden","vote_average","overview","substr","Movies","movies","setMovies","totalPages","setTotalPages","activePage","setActivePage","movieType","match","params","movieTypeAnt","setMovietypeAnt","apikey","setText","useEffect","searchMovies","location","state","axios","get","then","res","data","results","total_pages","catch","error","map","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","forcePage","onPageChange","e","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","App","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d18b20c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { NavLink, useHistory  } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const history = useHistory();\r\n    const [textSearch,setTextSearch] = useState('');\r\n    const search = event  => {\r\n        console.log(textSearch.length );\r\n        if(textSearch.length > 0) {\r\n            history.push('/search',{text: textSearch});\r\n        }\r\n    }\r\n\r\n    const changeText = event => {\r\n        setTextSearch(event.target.value);\r\n    }\r\n\r\n    return (<header>\r\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <p class=\"navbar-brand\">TMDB</p>\r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav mr-auto\">\r\n                        <li class=\"nav-item \">\r\n                            <NavLink to=\"/popular\" className=\"nav-link\">Películas populares</NavLink>\r\n                        </li>\r\n                        <li class=\"nav-item \">\r\n                            <NavLink to=\"/upcoming\" className=\"nav-link\">Próximas películas</NavLink>\r\n                        </li>        \r\n                        <li class=\"nav-item \">\r\n                            <NavLink to=\"/top_rated\" className=\"nav-link\">Películas más votadas</NavLink>\r\n                        </li>                                      \r\n                        </ul>\r\n                        <form class=\"form-inline my-2 my-lg-0\">\r\n                            <input class=\"form-control mr-sm-2\" type=\"search\"\r\n                            placeholder=\"Buscar película\" aria-label=\"Buscar\"\r\n                            onChange={changeText}/>\r\n                            <button class=\"btn btn-outline-info my-2 my-sm-0\" \r\n                            onClick={search}\r\n                            type=\"button\">Buscar</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </header>)\r\n    \r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport DayJS from 'react-dayjs';\r\n\r\nconst Movie = ({movie}) => {\r\n    const IMAGES_PATH = \"https://image.tmdb.org/t/p/original\";\r\n    return (\r\n        <div class=\"card col-sm-6 col-md-4 col-lg-2 m-2\">\r\n            <img class=\"card-img-top\" \r\n            src={IMAGES_PATH+movie.poster_path} alt={movie.title}\r\n            data-toggle=\"modal\" data-target=\"#exampleModal\"\r\n            />\r\n            <div class=\"card-body\">\r\n                <h4 class=\"card-title \">{movie.title} (<DayJS format=\"YYYY\">{movie.release_date}</DayJS>)</h4>\r\n                <div class=\"container\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12 metadata\">\r\n                            <i class=\"fa fa-star\" aria-hidden=\"true\"></i> \r\n                            <p>{movie.vote_average}/10</p>\r\n                        </div>\r\n                        <p class=\"card-text\">{movie.overview.substr(0,160)}...</p>\r\n                    </div>\r\n                </div> \r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Movie;\r\n\r\n/*\r\nGénero, debajo de VOTOS\r\n <div class=\"col-sm-8 metadata\">Adventure. Sci-Fi</div>\r\n\r\n*/","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport Movie from \"./Movie\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nconst Movies = props => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [activePage, setActivePage] = useState(1);\r\n    const movieType =props.match.params.movieType?props.match.params.movieType:[];\r\n    const [movieTypeAnt, setMovietypeAnt] = useState('');\r\n\r\n    const apikey = '1a328f10e026656d2ac01c360720f5f9';\r\n    var title = '';\r\n    const [text,setText] = useState('');\r\n      \r\n    switch (movieType) {\r\n        case \"popular\":\r\n            title = 'Populares';\r\n            break;\r\n        case \"upcoming\":\r\n            title = 'Próximamente';\r\n            break;\r\n        case \"search\":\r\n            title = 'Búsqueda';\r\n            break;\r\n        default:\r\n            title = 'Más votadas';\r\n            break;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (movieType !== movieTypeAnt)\r\n        {\r\n            setMovietypeAnt(movieType);\r\n            setActivePage(1);\r\n        }\r\n        setMovies([]);\r\n        searchMovies();\r\n           \r\n    }, [movieType,activePage]);\r\n\r\n    const handlePageChange = (e) => {\r\n        console.log(e);\r\n        const selectedPage = e.selected;\r\n        setActivePage(selectedPage+1);\r\n    }\r\n\r\n    const searchMovies = () => {\r\n        console.log(movieType+activePage);\r\n        if (movieType === 'search') {\r\n            setText(props.location.state.text);\r\n            if(props.location.state.text.length > 0) {\r\n                axios.get('https://api.themoviedb.org/3/search/movie?api_key='\r\n                +apikey+'&query='+props.location.state.text\r\n                +'&language=es-ES&page='+activePage)\r\n                .then(res => { \r\n                    setMovies(res.data.results);\r\n                    setTotalPages(res.data.total_pages);\r\n                })\r\n                .catch(console.error);\r\n            }\r\n        }\r\n        else {\r\n            setText('');\r\n            axios.get('https://api.themoviedb.org/3/movie/'\r\n            +movieType+'?api_key='+apikey+'&language=es-ES&page='+activePage)\r\n            .then(res => { \r\n                setMovies(res.data.results)\r\n                setTotalPages(res.data.total_pages); \r\n            })\r\n            .catch(console.error);\r\n        }\r\n    }\r\n    \r\n        return (\r\n            <div class=\"container\">\r\n                <h2>{title} {text}</h2>\r\n                <div class=\"row\">\r\n                    {movies.map( function(movie){\r\n                    if(movie.poster_path != null) { return <Movie key={movie.id} movie={movie}/>; }\r\n                    })}\r\n                </div>\r\n                <div class=\"row\">\r\n                    <ReactPaginate\r\n                            previousLabel={\"Anterior\"}\r\n                            nextLabel={\"Siguiente\"}\r\n                            breakLabel={\"...\"}\r\n                            breakClassName={\"break-me\"}\r\n                            pageCount={totalPages}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={5}\r\n                            forcePage={activePage-1}\r\n                            onPageChange={handlePageChange}\r\n                            containerClassName={\"pagination\"}\r\n                            subContainerClassName={\"pages pagination\"}\r\n                            activeClassName={\"active\"}\r\n                        />\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\n\r\nexport default Movies;\r\n","import Header from \"./componets/Header\";\nimport Movies from \"./componets/Movies\";\nimport {BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Header/>\n          <Switch>\n          <Route\n                exact\n                path=\"/\"\n                render={() => {\n                    return (\n                      <Redirect to=\"/popular\" /> \n                    )\n                }}\n              />\n            <Route path=\"/:movieType\" component={Movies} exact/>\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}